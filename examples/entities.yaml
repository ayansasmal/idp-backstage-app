---
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-system
apiVersion: backstage.io/v1alpha1
kind: System
metadata:
  name: examples
spec:
  owner: guests
---
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-component
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: example-website
  annotations:
    # ArgoCD application integration
    argocd/app-name: example-website
    argocd/instance-name: argocd-prod
    # Kubernetes integration
    backstage.io/kubernetes-id: example-website
spec:
  type: website
  lifecycle: experimental
  owner: guests
  system: examples
  providesApis: [example-grpc-api]
---
# Example service with ArgoCD integration
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: idp-backstage-app
  annotations:
    # ArgoCD application integration
    argocd/app-name: backstage
    argocd/instance-name: argocd-prod
    # Kubernetes integration
    backstage.io/kubernetes-id: backstage
    # Argo Workflows integration
    argoproj.io/workflow-template: backstage-ci-cd
    argoproj.io/workflow-namespace: argo
    # Source location
    backstage.io/source-location: url:https://github.com/ayansasmal/idp-backstage-app
spec:
  type: service
  lifecycle: production
  owner: platform-team
  system: examples
---
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-api
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: example-grpc-api
spec:
  type: grpc
  lifecycle: experimental
  owner: guests
  system: examples
  definition: |
    syntax = "proto3";

    service Exampler {
      rpc Example (ExampleMessage) returns (ExampleMessage) {};
    }

    message ExampleMessage {
      string example = 1;
    };
